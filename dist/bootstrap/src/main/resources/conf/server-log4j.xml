<?xml version="1.0" encoding="UTF-8"?>
<!--

    NOTE: This copyright does *not* cover user programs that use HQ
    program services by normal system calls through the application
    program interfaces provided as part of the Hyperic Plug-in Development
    Kit or the Hyperic Client Development Kit - this is merely considered
    normal use of the program, and does *not* fall under the heading of
     "derived work".

     Copyright (C) [2009-2010], VMware, Inc.
     This file is part of HQ.

     HQ is free software; you can redistribute it and/or modify
     it under the terms version 2 of the GNU General Public License as
     published by the Free Software Foundation. This program is distributed
     in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
     even the implied warranty of MERCHANTABILITY or FITNESS FOR A
     PARTICULAR PURPOSE. See the GNU General Public License for more
     details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
     USA.


-->

<!DOCTYPE log4j:configuration PUBLIC "-//LOGGER" "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- ============================== -->
	<!-- Appenders -->
	<!-- ============================== -->

	<!-- Provides Console Logging -->
	<appender name="CONSOLE" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />

		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d{dd-MM-yyyy HH:mm:ss,SSS z} %-5p [%t] [%c@%L] %m%n" />
		</layout>
	</appender>


	<!--  Provides File Logging  -->
	<appender name="FILE" class="org.apache.log4j.rolling.RollingFileAppender">
		<rollingPolicy class="org.apache.log4j.rolling.FixedWindowRollingPolicy">
			<param name="FileNamePattern" value="${server.home}/logs/server.log.%i.gz"/>
			<param name="ActiveFileName" value="${server.home}/logs/server.log"/>
			<param name="MinIndex" value="1" />
			<param name="MaxIndex" value="13" />
		</rollingPolicy>
		<triggeringPolicy class="org.apache.log4j.rolling.SizeBasedTriggeringPolicy">
			<param name="MaxFileSize" value="52428800" />
		</triggeringPolicy>
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d{dd-MM-yyyy HH:mm:ss,SSS z} %-5p [%t] [%c@%L] %m%n" />
		</layout>
	</appender>
    
	<!--
		A SYSLOG Appender for use with the SyslogAction class. To enable, make
		sure the syslogd on the box has been started with '-r' so that it
		accepts network connections. Separately, you'll need to enable the
		alert gui by setting the SYSLOG_ALERTS_ENABLED attribute in the HQ
		database's EAM_CONFIG_PROPS table to 'true'.
	-->

	<!--
		<appender name="SYSLOG" class="org.apache.log4j.net.SyslogAppender">
		<errorHandler class="org.apache.log4j.helpers.OnlyOnceErrorHandler" />
		<param name="Facility" value="SYSLOG" /> <param
		name="FacilityPrinting" value="true" /> <param name="SyslogHost"
		value="localhost" /> <layout class="org.apache.log4j.PatternLayout">
		<param name="ConversionPattern" value="%c{1}[%r]: %m%n" /> </layout>
		</appender> <logger
		name="org.hyperic.hq.bizapp.server.action.log.SyslogAction"> <level
		value="ERROR" /> <appender-ref ref="SYSLOG" /> </logger>
	-->


	<!-- ====================== -->
	<!-- ASYNC Appender for all Logging -->
	<!-- ====================== -->

	<appender name="ASYNC" class="org.apache.log4j.AsyncAppender">
		<appender-ref ref="FILE" />
		<!--
    <appender-ref ref="SMTP"/>
    -->
	</appender>

	<!-- ============================== -->
	<!-- 3rd party loggers -->
	<!-- ============================== -->

	<logger name="org.springframework">
		<level value="warn" />
	</logger>

	<logger name="org.springframework.core">
		<level value="info" />
	</logger>

	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>

	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>
	
	<logger name="org.apache.tools.ant">
		<level value="error" />
	</logger>

	<!-- Turn off form validation messages -->
	<logger name="org.apache.commons.validator.ValidatorResources">
		<level value="OFF" />
	</logger>

        <!-- turn off "handling transient entity in delete processing" log message when pojos are deleted -->
        <logger name="org.hibernate.event.def.DefaultLoadEventListener">
            <level value="OFF" />
        </logger>

        <!-- turn off "handling transient entity in delete processing" log message when pojos are deleted -->
        <logger name="org.hibernate.event.def.DefaultDeleteEventListener">
            <level value="OFF" />
        </logger>

	<!-- Turn off form struts messages -->
	<logger name="org.apache.struts">
		<level value="OFF" />
	</logger>
	
	<!-- Turn off useless error messages, HHQ-3920 -->
	<logger name="org.hibernate.cache.ReadWriteCache">
  		<level value="OFF"/>
	</logger>

        <!-- HHQ-4744, turn off hibernate logging of StaleStateException, all errors are logged in HQ -->
        <logger name="org.hibernate.event.def.AbstractFlushingEventListener">
            <level value="OFF" />
        </logger>
        <logger name="org.hibernate.jdbc.AbstractBatcher">
            <level value="OFF" />
        </logger>

    <!-- To debug Plugin Manager related issues change the following from INFO to DEBUG -->
    <logger name="org.hyperic.hq.appdef.server.session.PluginSyncJob">
        <level value="INFO" />
    </logger>
    <logger name="org.hyperic.hq.appdef.server.session.AgentRemovePluginJob">
        <level value="INFO" />
    </logger>
    <logger name="org.hyperic.hq.appdef.server.session.AgentPluginStatus">
        <level value="INFO" />
    </logger>
    <logger name="org.hyperic.hq.appdef.server.session.AgentPluginStatusEnum">
        <level value="INFO" />
    </logger>
    <logger name="org.hyperic.hq.appdef.server.session.AgentPluginStatusDAO">
        <level value="INFO" />
    </logger>
    <logger name="org.hyperic.hq.appdef.server.session.AgentPluginSyncRestartThrottle">
        <level value="INFO" />
    </logger>
    <logger name="org.hyperic.hq.appdef.server.session.AgentManagerImpl">
        <level value="INFO" />
    </logger>
    <logger name="org.hyperic.hq.appdef.server.session.AgentPluginUpdaterImpl">
        <level value="INFO" />
    </logger>
    <logger name="org.hyperic.hq.product.server.session.PluginManagerImpl">
        <level value="INFO" />
    </logger>

    <!-- To debug availability issues change the following from INFO to DEBUG -->
    <logger name="org.hyperic.hq.measurement.server.session.BackfillPointsServiceImpl">
        <level value="INFO"/>
    </logger>
    <logger name="org.hyperic.hq.measurement.server.session.AvailabilityCheckServiceImpl">
        <level value="INFO"/>
    </logger>
    <logger name="org.hyperic.hq.measurement.server.session.ReportProcessorImpl">
        <level value="INFO"/>
    </logger>

    <!-- To debug agent scheduling issues change the following from INFO to DEBUG -->
    <logger name="org.hyperic.hq.measurement.server.session.MeasurementProcessorImpl">
        <level value="INFO"/>
    </logger>
    <logger name="org.hyperic.hq.agent.server.session.AgentSynchronizer">
        <level value="INFO"/>
    </logger>
    <logger name="org.hyperic.hq.measurement.server.session.AgentScheduleSynchronizer">
        <level value="INFO"/>
    </logger>

    <!-- To debug autoinventory issues change the following from INFO to DEBUG -->
    <logger name="org.hyperic.hq.autoinventory.server.session.AutoinventoryManagerImpl">
        <level value="INFO"/>
    </logger>
    <logger name="org.hyperic.hq.autoinventory.server.session.ServiceMergerImpl">
        <level value="INFO"/>
    </logger>
	<logger name="org.apache.cxf" >
	    <level value="ERROR" />
    </logger>
	
    <!-- To debug Top Processes issues change the following from INFO to DEBUG, you can also change the debug
	level of ReportProcessorImpl and LatherDispatcherImpl for additional debug info-->
    <logger name="org.hyperic.hq.topn.TopNManagerImpl">
        <level value="INFO"/>
    </logger>
     <logger name="org.hyperic.hq.measurement.server.session.DataManagerImpl">
        <level value="INFO"/>
    </logger>
    <logger name="org.hyperic.hq.measurement.server.session.TopNDataInserter">
        <level value="INFO"/>
    </logger>
    
    <!-- to debug the streaming notifications (vcops adapter) -->
    <logger name="org.hyperic.hq.notifications.EndpointQueue">
        <level value="INFO"/>
    </logger>
    <logger name="org.hyperic.hq.notifications.HttpEndpoint">
        <level value="INFO"/>
    </logger>
	
	<!-- 
		To debug Alert mechanism change the following classes from INFO to DEBUG. 
	-->
	
	<!-- Alert events (including Alert Manager) -->
	<logger name="org.hyperic.hq.events">
		<level value="INFO"/>
	</logger>
	
	<!-- Alert events queue (including Queue Manager): enqueue and dequeue -->
	<logger name="org.hyperic.hq.zevents">
                <level value="INFO" />
    </logger>
	
	<!-- Alert actions -->
	<logger name="org.hyperic.hq.bizapp.server.action">
        <level value="INFO" />
    </logger>
    
    <!-- Email notifications -->
    <logger name="org.hyperic.hq.bizapp.server.session.EmailManagerImpl">
    	<level value="INFO" />
    </logger>
    
    <!-- Escalation -->
    <logger name="org.hyperic.hq.escalation.server.session">
        <level value="INFO" />
    </logger>
        
	<!-- 
		To debug Measurement subsystem change the value from INFO to DEBUG. 
		For example: availability average calculation
	-->
	<logger name="org.hyperic.hq.bizapp.server.session.MeasurementBossImpl">
		<level value="INFO"/>
	</logger>
	
	<!-- 
		To debug Server Config manager change the value from INFO to DEBUG.
		For example: HQ-GUID
	-->
	<logger name="org.hyperic.hq.common.server.session.ServerConfigManagerImpl">
		<level value="INFO"/>
	</logger>
	
	<!-- Hyperic - VC communication and logic -->
	<!-- logger name="org.hyperic.hq.vm.VCManagerImpl">
		<level value="INFO" />
	</logger>
	<logger name="org.hyperic.hq.vm.VCDAO">
		<level value="INFO" />
	</logger -->
	
	<!--
		To debug all VC subsystem change the value from INFO to DEBUG . 	  
	 -->
	<logger name="org.hyperic.hq.vm">
		<level value="INFO" />
	</logger>
	
	<!--
		Subsystems. Uncomment individual subsystems to see debug messages.
	-->

	<!--<logger name="org.hyperic.hq.auth">
		<level value="DEBUG" />
	</logger>
	<logger name="org.hyperic.hq.authz">
		<level value="DEBUG" />
	</logger>
	<logger name="org.hyperic.hq.appdef">
		<level value="DEBUG" />
	</logger>
	<logger name="org.hyperic.hq.agent">
		<level value="DEBUG" />
	</logger>
	<logger name="org.hyperic.hq.control">
		<level value="DEBUG" />
	</logger>
	<logger name="org.hyperic.hq.measurement">
		<level value="DEBUG" />
	</logger>
	<logger name="org.hyperic.hq.grouping">
		<level value="DEBUG" />
	</logger>
	<logger name="org.hyperic.hq.autoinventory">
		<level value="DEBUG" />
	</logger>
	<logger name="org.hyperic.hq.ui">
		<level value="DEBUG" />
	</logger>
	<logger name="org.hyperic.hq.pdk">
		<level value="DEBUG" />
	</logger>
	<logger name="org.hyperic.hq.rt">
		<level value="DEBUG" />
	</logger> -->

	<!--
		Use this logger to log every instance of resource counter-type alerts
		triggering. Comment out if the log messages become unwieldy.
	-->
	<!--  <logger name="org.hyperic.hq.events.server.session.CounterExecutionStrategy">
		<level value="DEBUG" />
	</logger> -->


	<!--
		Use this logger to log every instance of resource alerts,
		non-counter-type, triggering. Comment out if the log messages become
		unwieldy.
	-->
	<!--  <logger
		name="org.hyperic.hq.events.server.session.SingleAlertExecutionStrategy">
		<level value="DEBUG" />
	</logger> -->


	<!--
		Use this logger to log every instance of a resource alert firing.
		Comment out if the log messages become unwieldy.
	-->
	<!-- <logger name="org.hyperic.hq.events.server.session.AlertManagerImpl">
		<level value="DEBUG" />
	</logger>  -->
	

	<!--
		Use this logger to log every instance of a group alert firing. Comment
		out if the log messages become unwieldy.
	-->
	 <!--  <logger name="org.hyperic.hq.galerts.processor.MemGalertDef.Fired">
		<level value="DEBUG" />
	</logger>  -->


    <!-- Use these loggers to log manage-at-scale -->
    <!-- 
    <logger name="com.hyperic.hq.management"> 
        <level value="DEBUG" /> 
    </logger> 
    -->

    <!-- Use these loggers to log REST API -->
    <!-- 
    <logger name="org.apache.cxf"> 
        <level value="INFO" /> 
    </logger> 
    -->
    


	<!-- ======================= -->
	<!-- Setup the Root logger -->
	<!-- ======================= -->

	<root>
		<level value="INFO" />
		<appender-ref ref="FILE" />
	</root>

</log4j:configuration>


