<?xml version="1.0"?>
<!--

    NOTE: This copyright does *not* cover user programs that use HQ
    program services by normal system calls through the application
    program interfaces provided as part of the Hyperic Plug-in Development
    Kit or the Hyperic Client Development Kit - this is merely considered
    normal use of the program, and does *not* fall under the heading of
     "derived work".

     Copyright (C) [2004-2010], VMware, Inc.
     This file is part of HQ.

     HQ is free software; you can redistribute it and/or modify
     it under the terms version 2 of the GNU General Public License as
     published by the Free Software Foundation. This program is distributed
     in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
     even the implied warranty of MERCHANTABILITY or FITNESS FOR A
     PARTICULAR PURPOSE. See the GNU General Public License for more
     details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
     USA.


-->


<!DOCTYPE plugin [
  <!ENTITY process-metrics SYSTEM "/pdk/plugins/process-metrics.xml">
]>



<plugin package="org.hyperic.hq.plugin.oracle">
  <property name="PLUGIN_VERSION" value="@project.version@"/>

  <!-- extracted to: pdk/work/scripts/oracle/hq-tns-ping -->
  <script name="hq-tns-ping">
#!/bin/sh

this_script=`basename $0`

usage()
{ 
  printf "usage: %s -p &lt;installpath&gt; -n &lt;tnsname&gt;\n" $this_script
  exit 4
}

while getopts "p:n:" opt
do
     case $opt in
     n)     nflag=1
            tnsname="$OPTARG";;
     p)     pflag=1
            path="$OPTARG";;
     ?)     usage;;
     esac
done

if [ -z "$nflag" ]
then
  usage
elif [ -z "$pflag" ]
then
  usage
fi

tnschk=`$path/bin/tnsping $tnsname`
tnschk2=`echo  $tnschk | grep -c OK`
if [ "${tnschk2}" -eq 1 ] ; then
    tnschk3=`echo $tnschk | sed -e 's/.*(//' -e 's/).*//' -e 's/ msec//'`
    echo "$tnsname.TNSResponseTime=${tnschk3}"
    echo "$tnsname.Availability=1"
    exit 0
else
    echo "No TNS Listener on $tnsname"
    echo "$tnsname.Availability=0"
    exit 3
fi
  </script>

 <script name="startup.sql">
 <![CDATA[
		startup;
		quit;
 ]]>

 </script>

 <script name="shutdown.sql">
 <![CDATA[
	shutdown &1;
	quit
]]>
 </script>


  <classpath>
    <include name="pdk/lib/jdbc/ojdbc5.jar"/>
    <include name="pdk/lib/jdbc/ojdbc5_g.jar"/>
    <include name="pdk/lib/jdbc/ojdbc6.jar"/>
    <include name="pdk/lib/jdbc/ojdbc6_g.jar"/>
    <include name="pdk/lib/jdbc/ojdbc7.jar"/>
    <include name="pdk/lib/jdbc/ojdbc7_g.jar"/>
  </classpath>

  <!-- we use a dummy jmx object name -->
  <filter name="domain" value="oracle"/>

  <filter name="hq-tns-ping"
          value="pdk/work/scripts/oracle/hq-tns-ping"/>

  <property name="DEFAULT_URL"
            value="jdbc:oracle:thin:@localhost:1521:ORCLTST"/>

  <!-- appended to each template by MeasurementInfoXML -->
  <property name="template-config"
            value="jdbcUrl=%jdbcUrl%,jdbcUser=%jdbcUser%,jdbcPassword=%jdbcPassword%"/>

  <metrics name="Oracle">
    <metric name="Availability"
            alias="Availability"
            template="${domain}:Type=Server:availability"
            category="AVAILABILITY"
            indicator="true"
            units="percentage"
            collectionType="dynamic"/>

    <metric name="Physical Reads"
            alias="PhysicalReads"
            template="${domain}:Type=Service:${alias}"
            category="THROUGHPUT"
            units="none"
            collectionType="trendsup"/>

    <metric name="Logical Reads"
            alias="LogicalReads"
            template="${domain}:Type=Service:${alias}"
            category="THROUGHPUT"
            units="none"
            collectionType="trendsup"/>

    <metric name="Physical Writes"
            alias="PhysicalWrites"
            template="${domain}:Type=Service:${alias}"
            category="THROUGHPUT"
            units="none"
            collectionType="trendsup"/>

    <metric name="User Calls"
            alias="UserCalls"
            template="${domain}:Type=Service:${alias}"
            category="THROUGHPUT"
            units="none"
            collectionType="trendsup"/>

    <metric name="User Commits"
            alias="UserCommits"
            template="${domain}:Type=Service:${alias}"
            category="THROUGHPUT"
            indicator="true"
            units="none"
            collectionType="trendsup"/>

    <metric name="User Rollbacks"
            alias="UserRollbacks"
            template="${domain}:Type=Service:${alias}"
            category="THROUGHPUT"
            units="none"
            collectionType="trendsup"/>

    <metric name="Connections Cumulative"
            alias="LogonsCumulative"
            template="${domain}:Type=Service:${alias}"
            category="THROUGHPUT"
            units="none"
            collectionType="trendsup"/>

    <metric name="Connections Current"
            alias="LogonsCurrent"
            template="${domain}:Type=Service:${alias}"
            category="THROUGHPUT"
            units="none"
            collectionType="dynamic"/>

    <metric name="Bytes Sent via SQL*Net"
            alias="BytesSent"
            template="${domain}:Type=Service:${alias}"
            category="THROUGHPUT"
            units="B"
            collectionType="trendsup"/>

    <metric name="Bytes Received via SQL*Net"
            alias="BytesReceived"
            template="${domain}:Type=Service:${alias}"
            category="THROUGHPUT"
            units="B"
            collectionType="trendsup"/>

    <metric name="Client Roundtrips"
            alias="ClientRoundtrips"
            template="${domain}:Type=Service:${alias}"
            category="THROUGHPUT"
            units="none"
            collectionType="trendsup"/>

    <metric name="Opened Cursors Cumulative"
            alias="OpenedCursorsCumulative"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="trendsup"/>

    <metric name="Opened Cursors Current"
            alias="OpenedCursorsCurrent"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="dynamic"/>

    <metric name="CPU Time Total"
            alias="CPUUsage"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            indicator="true"
            units="jiffys"
            collectionType="trendsup"/>

    <metric name="CPU Time Recursive"
            alias="CPUUsageRecursive"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            units="jiffys"
            collectionType="trendsup"/>

    <metric name="CPU Time Parse"
            alias="CPUUsageParse"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            units="jiffys"
            collectionType="trendsup"/>

    <metric name="Cache Hit Ratio"
            alias="CacheHitRatio"
            template="${domain}:Type=Service:${alias}"
            category="PERFORMANCE"
            units="percentage"
            collectionType="dynamic"/>

    <metric name="Data Dictionary Cache Hit Ratio"
            alias="DataDictionaryCacheHitRatio"
            template="${domain}:Type=Service:${alias}"
            category="PERFORMANCE"
            units="percentage"
            collectionType="dynamic"/>

    <metric name="Library Cache Hit Ratio"
            alias="CacheHitRatio"
            template="${domain}:Type=Service:${alias}"
            category="PERFORMANCE"
            units="percentage"
            collectionType="dynamic"/>

    <metric name="Up Time"
            alias="UpTime"
            template="${domain}:Type=Service:${alias}"
            category="AVAILABILITY"
            units="ms"
            collectionType="static"/>

    <metric name="Block Changes"
            alias="BlockChanges"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="trendsup"/>

    <metric name="Redo Size Generated"
            alias="RedoSize"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            units="B"
            collectionType="trendsup"/>

    <metric name="Redo Log Size"
            alias="RedoLogSize"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            units="B"
            collectionType="dynamic"/>

    <metric name="Session PGA Memory"
            alias="SessionPGAMemory"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            units="B"
            collectionType="dynamic"/>

    <metric name="Session UGA Memory"
            alias="SessionUGAMemory"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            units="B"
            collectionType="dynamic"/>

    <metric name="Parse Count (total)"
            alias="ParseCount"
            template="${domain}:Type=Server:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="trendsup"/>

    <metric name="Parse Count (hard)"
            alias="HardParseCount"
            template="${domain}:Type=Server:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="trendsup"/>

    <metric name="Sorts Disk"
            alias="SortsDisk"
            template="${domain}:Type=Server:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="trendsup"/>

    <metric name="Sorts Memory"
            alias="SortsMemory"
            template="${domain}:Type=Server:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="trendsup"/>

    <metric name="Sorts Rows"
            alias="SortsRows"
            template="${domain}:Type=Server:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="trendsup"/>

    <metric name="Table Scans (long)"
            alias="TableScansLong"
            template="${domain}:Type=Server:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="trendsup"/>

    <metric name="Table Scans (short)"
            alias="TableScansShort"
            template="${domain}:Type=Server:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="trendsup"/>

    <metric name="Execute Count"
            alias="ExecuteCount"
            template="${domain}:Type=Server:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="trendsup"/>

    <metric name="Instance Used Space"
            alias="InstanceUsedSpace"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            units="B"
            collectionType="dynamic"/>

    <metric name="Instance Free Space"
            alias="InstanceFreeSpace"
            template="${domain}:Type=Service:${alias}"
            category="UTILIZATION"
            units="B"
            collectionType="dynamic"/>

  </metrics>

  <metrics name="User Instance">
    <metric name="Availability"
            alias="Availability"
            template="${domain}:Type=Service,user=%user%:availability"
            category="AVAILABILITY"
            indicator="true"
            units="percentage"
            collectionType="dynamic"/>

    <metric name="Logons Current (active)"
            alias="LogonsCurrentUserActive"
            template="${domain}:Type=Service,user=%user%:${alias}"
            category="THROUGHPUT"
            indicator="true"
            units="none"
            collectionType="dynamic"/>

    <metric name="Logons Current (inactive)"
            alias="LogonsCurrentUserInactive"
            template="${domain}:Type=Service,user=%user%:${alias}"
            category="THROUGHPUT"
            indicator="true"
            units="none"
            collectionType="dynamic"/>

    <metric name="Opened Cursors Current"
            alias="OpenedCursorsCurrentUser"
            template="${domain}:Type=Service,user=%user%:${alias}"
            category="THROUGHPUT"
            indicator="true"
            units="none"
            collectionType="dynamic"/>

    <metric name="Used Space"
            alias="UsedSpace"
            template="${domain}:Type=Service,user=%user%:${alias}"
            category="UTILIZATION"
            indicator="true"
            units="B"
            collectionType="dynamic"/>
  </metrics>

  <metrics name="Tablespace">
    <metric name="Availability"
            alias="Availability"
            template="${domain}:Type=Tablespace,tablespace=%tablespace%:availability"
            category="AVAILABILITY"
            indicator="true"
            units="percentage"
            collectionType="dynamic"/>

    <metric name="Free Space"
            alias="TSFreeSpace"
            template="${domain}:Type=Tablespace,tablespace=%tablespace%:${alias}"
            category="UTILIZATION"
            indicator="true"
            units="B"
            collectionType="dynamic"/>

    <metric name="Free Extents"
            alias="TSFreeExtents"
            template="${domain}:Type=Tablespace,tablespace=%tablespace%:${alias}"
            category="UTILIZATION"
            indicator="true"
            units="none"
            collectionType="dynamic"/>

    <metric name="Disk Space Used"
            alias="TSUsedDiskSpace"
            template="${domain}:Type=Tablespace,tablespace=%tablespace%:${alias}"
            category="UTILIZATION"
            indicator="true"
            units="B"
            collectionType="dynamic"/>

    <metric name="Number of Data Files"
            alias="TSNumDataFiles"
            template="${domain}:Type=Tablespace,tablespace=%tablespace%:${alias}"
            category="UTILIZATION"
            units="none"
            collectionType="static"/>

    <metric name="Space Used Percent"
            alias="TSSpaceUsedPercent"
            template="${domain}:Type=Tablespace,tablespace=%tablespace%:${alias}"
            category="UTILIZATION"
            indicator="true"
            units="percentage"
            collectionType="dynamic"/>

  </metrics>

  <!-- ==================== Resource Definition =================== -->
  <server name="Oracle" version="8i">

    <plugin type="measurement"
            class="OracleMeasurementPlugin"/>

    <metrics include="Oracle"/>

    <plugin type="autoinventory"
            class="OracleServerDetector"/>

    <scan type="file">
      <include name="/**/bin/oracle"/>
    </scan>

    <config>
      <option name="jdbcUrl"
              description="JDBC Connection URL"
              default="${DEFAULT_URL}"/>
      <option name="jdbcUser"
              description="JDBC User"/>
      <option name="jdbcPassword" type="secret"
              description="JDBC Password"/>
      <option name="tnsnames"
              description="TNS Listener File"
              default="network/admin/tnsnames.ora"/>
      <option name="process.ptql"
              description="PTQL which describes the processes to monitor"
              default="State.Name.eq=oracle,Args.0.sw=ora_"/>
      <option name="listen.ports" description="Listening Ports" 
              optional="true"/>
    </config>

    <properties>
       <property name="version"
                 description="Oracle Version"/>
    </properties>

    <plugin type="config_track" class="org.hyperic.hq.product.FileChangeTrackPlugin" />

   <plugin type="config_track" platform="unix"
            class="org.hyperic.hq.product.FileChangeTrackPlugin">
            <monitored>
            	<folder path="dbs" recursive="false" filter=".*\.ora"/>
            	<folder path="network/admin" recursive="false" filter=".*\.ora"/>
            	<folder path="etc" recursive="false" filter="oratab"/>
            </monitored>
    </plugin>

   <plugin type="config_track" platform="win32"
            class="org.hyperic.hq.product.FileChangeTrackPlugin">
            <monitored>
            	<folder path="database" recursive="false" filter=".*\.ora"/>
            	<folder path="network/admin" recursive="false" filter=".*\.ora"/>
            </monitored>
    </plugin>
    <property name="DEFAULT_CONFIG_TRACK_ENABLE" value="false" />
    

    <service name="User Instance">
      <plugin type="measurement"
              class="OracleMeasurementPlugin"/>

      <config>
        <option name="user"
                description="User to monitor"/>
      </config>

      <metrics include="User Instance"/>

      <properties>
        <property name="status"
                  description="Account Status"/>
        <property name="default_tablespace"
                  description="Default Tablespace"/>
        <property name="temp_tablespace"
                  description="Temporary Tablespace"/>
      </properties>
    </service>

    <service name="Tablespace">
      <plugin type="measurement"
              class="OracleMeasurementPlugin"/>
      <config>
        <option name="tablespace"
                description="Tablespace to monitor"/>
      </config>
      <metrics include="Tablespace"/>
      <properties>
        <property name="block_size"
                  description="Block Size"/>
        <property name="contents"
                  description="Contents"/>
        <property name="logging"
                  description="Logging"/>
        <property name="allocation_type"
                  description="Allocation Type"/>
        <property name="space_management"
                  description="Segment Space Management"/>
      </properties>
    </service>

    <service name="Process Metrics">
      <config>
        <option name="process.query"
                description="PTQL which describes the process to retrieve metrics"/>
      </config>
      <metric name="Availability"
              template="sigar:Type=ProcState,Arg=%process.query%:State"
              indicator="true"/>
      &process-metrics;
    </service>

    <service name="TNS Ping">
      <config>
        <option name="tnslistener"
                description="TNS Listener"/>
        <option name="timeout"
                description="TNS Ping Timeout"
                default="10"/>
      </config>
      <filter name="template">
        exec:timeout=%timeout%,file=${hq-tns-ping},args=-p %installpath% -n %tnslistener%:%tnslistener%.${alias}
      </filter>
      <metric name="Availability"
              category="AVAILABILITY"
              indicator="true"/>
      <metric name="TNS Response Time"
              category="PERFORMANCE"
              indicator="true"
              units="ms"
              collectionType="dynamic"/>
    </service>

  </server>

  <server name="Oracle" version="9i"
          include="8i"/>

  <server name="Oracle" version="10g"
          include="9i">
          
    <plugin type="control"
           class="OracleServerControl"/>
    
           <config type="control">
               <option name="listeners"
                       default=""
                       optional="true"
                       description="Comma separated listener names to be started with the DB instance"/>
           </config>

    <!-- Define user service -->
    <service name="Segment">
      <config>
        <option name="segment"
                description="Name of the Segment (Table or Index)"/>
        <option name="tablespace"
                description="Name of the Tablespace"/>
      </config>
      <filter name="template"
              value="${domain}:Type=Segment,segment=%segment%,tablespace=%tablespace%:${alias}"/>
      <metric name="Availability"
              alias="Availability"
              category="AVAILABILITY"
              indicator="true"
              units="percentage"
              collectionType="dynamic"/>
      <metric name="Disk Space Used"
              alias="SegmentSize"
              category="UTILIZATION"
              indicator="true"
              units="B"
              collectionType="dynamic"/>
      <metric name="Number Of Rows"
              category="UTILIZATION"
              indicator="true"
              units="none"
              collectionType="dynamic"/>
      <plugin type="control"
              class="OracleControlPlugin"/>
      <actions include="Analyze"/>
    </service>
  </server>

  <server name="Oracle" version="11g"
          include="10g"/>         

  <server name="Oracle" version="12c"
          include="11g"/>         

          <!-- ==================== Plugin Help =========================== -->

  <help name="Oracle">
    <![CDATA[
    <p>
    <h3>Configure Oracle ${product.version} for Monitoring</h3>
    </p>
    <p>
    Oracle monitoring is done through reading the system catalog. This is
    done using standard SQL queries which the plugin passes into Oracle via
    JDBC.  In order to access the catalog for reading, an account needs to 
    be created, or designated with the following privileges:
    </p>
    <p>
    For the TNS Listener Ping Service to work properly the HQ Agent user must
    have the appropriate oracle env vars, permissions to read the tnsnames.ora
    file and execution permission to run tnsping.
    <br>
    An example of oracle env vars are:
    </p>
    <pre>
      ORACLE_HOME=/oracle
      export ORACLE_HOME
      PATH="${ORACLE_HOME}/bin:${PATH}"
      export PATH
    </pre>
    ]]>
  </help>  

  <help name="Oracle 8i" include="Oracle">
    <![CDATA[
    <ul>
      <li><b>SELECT ANY TABLE</b></li>
    </ul>

    <p>
    The following SQL statements illustrate the creation of such an account.
    </p>
    <pre>
      CREATE USER ${jdbcUser} IDENTIFIED BY MYPASSWORD;
      GRANT CONNECT TO ${jdbcUser};
      GRANT SELECT ANY TABLE TO ${jdbcUser};
    </pre>
    ]]>
  </help>

  <help name="Oracle 9i" include="Oracle">
    <![CDATA[
    <ul>
      <li><b>SELECT ANY DICTIONARY</b></li>
    </ul>
    <p>
    The following SQL statements illustrate the creation of such an account.
    </p>
    <pre>
      CREATE USER ${jdbcUser} IDENTIFIED BY MYPASSWORD;
      GRANT CONNECT TO ${jdbcUser};
      GRANT SELECT ANY DICTIONARY TO ${jdbcUser};
    </pre>
    ]]>
  </help>

  <help name="Oracle 10g" include="Oracle">
    <![CDATA[
    <ul>
      <li><b>SELECT ANY DICTIONARY</b></li>
    </ul>
    <p>
    The following SQL statements illustrate the creation of such an account.
    </p>
    <pre>
      CREATE USER ${jdbcUser} IDENTIFIED BY MYPASSWORD;
      GRANT CONNECT TO ${jdbcUser};
      GRANT SELECT ANY DICTIONARY TO ${jdbcUser};
    </pre>
    <p>
    ${product.version} provides segment size metrics for indexes and tables, and must be
    created manually.
    </p>
    <pre>
    To create:
    1) create new service (tools menu -> new service) &quot;Oracle ${product.version} Segment&quot;
        and enter the appropriate information.
    2) in order for oracle to have up to date information on tables / indexes, create
        a scheduled control action to &quot;Analyze&quot; the table every day for each
        segment.
    </pre>
    ]]>
  </help>

  <help name="Oracle 11g" include="Oracle 10g"/>

</plugin>
